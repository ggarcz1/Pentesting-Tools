# get current IP 
# run translation algorithm
# build packet
# send packet

import requests
import json
import re
import random

def search(ipAddress):
    response = requests.get('http://ip-api.com/json/'+ipAddress)
# validIPv4.go([ip])
    data = json.loads(response.content)
    for idx in data:
        print(str(idx)+': '+str(data[idx]))

# perfom algo mask calc here
OFFSET = 16
IP_STATIC = ''


if IP_STATIC == '':
    # determine public IP
    response = requests.get('http://checkip.dyndns.org/')
    # change bytes to a string
    response = response.content.decode("utf-8")
    ipv4_pattern = r'((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
    x = re.search(ipv4_pattern, response)
    IP_STATIC = x[0]
    print(f'Current public IP Address: {IP_STATIC}', )
# search(ipAddress)

# split ip address
lst = IP_STATIC.split('.')
numLst = []
# rebuild with new random IP
for idx in lst:
    val = int(idx) + OFFSET
    if val > 255:
        val = val % 255 + 1 
    numLst.append(str(val))

# build newIP
newIP = '.'.join(numLst) 
print(newIP)
# search(newIP)