import hashlib
import re


def hash_input(val):
    return hashlib.sha256(val.encode()).hexdigest()


def length(val):
    return 8 <= len(val) <= 32


def spaces(val):
    if val[0] == ' ' or val[len(val) - 1] == ' ':
        return False

    # Ensure no carriage return, linefeed, /, \
    for idx in range(len(val)):
        if chr(13) == val[idx] or chr(10) == val[idx] or '/' == val[idx] or '\\' == val[idx]:
            return False
    return True


def consecutiveChars(val):
    # no more than two identical consecutive chars, numbers ok though
    for idx in range(len(val) - 2):
        if val[idx] == val[idx + 1] and val[idx + 1] == val[idx + 2]:
            return False
    return True


def upperLower(val):
    return re.search('[A-Z]', val) is not None and re.search('[a-z]', val) is not None


def number(val):
    return re.search('[1-9]', val) is not None


def special(val):
    return re.search('[!@#$%&*()]', val) is not None


password = input('Enter new password with \n-At least one uppercase letter\n-At least one lowercase letter\n-At least '
                 'one number\n-At least one special character (!,@,#,$,%,&)\n-At least 8 characters long, '
                 'no more than 32\nPassword:')

while not (length(password) and spaces(password) and upperLower(password) and number(password) and
           consecutiveChars(password) and special(password)):
    password = input('Password invalid.  Try again.\nPassword:')


passwordVerify = input('Re-enter password: ')
while passwordVerify != password:
    passwordVerify = input('\nERROR. PASSWORDS DO NOT MATCH\nRe-enter password: ')
print('Success.')

# hash the input, SHA256, for storage
password = hash_input(password)
