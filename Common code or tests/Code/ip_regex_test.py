import re
import argparse

# usage
# python ip_regex_test.py -ip {}

# python .\ip_regex_test.py -ip 192.145.12.2
# Output:
# Validated IP:
# 192.145.12.2

# python .\ip_regex_test.py -ip 192.sadas.12.2
# Output:
# No match on input for: 
# 192.sadas.12.2

def is_private(ip):

    # 10.0.0.0 to 10.255.255.255.
    # 172.16.0.0 to 172.31.255.255.
    # 192.168.0.0 to 192.168.255.255.

    pattern1 = '^10.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
    pattern2 = '^172.(1[6-9]|2[0-9]|3[0-1]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
    pattern3 = '^192.168.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'

    match1 = re.findall(pattern=pattern1, string=ip)
    match2 = re.findall(pattern=pattern2, string=ip)
    match3 = re.findall(pattern=pattern3, string=ip)

    return match1 or match2 or match3

syntax = 'python ip_regex_test.py -ip {}'

parser = argparse.ArgumentParser(description='description')
parser.add_argument('-ip', '--arg1', help='description')

args = parser.parse_args()

string = ''

if args.arg1:
    string = args.arg1
    string = string.strip()
else:
    print(f'Error. usage: {syntax}')
    exit()

pattern = '^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'

match = re.findall(pattern=pattern, string=string)

if match:
    if is_private(ip=string):
        print('Private IP.')
    else:
        print('Public IP.')
    print(f'Valid IP: {string}')

else:
    print(f'Not a valid IP: {string}')
