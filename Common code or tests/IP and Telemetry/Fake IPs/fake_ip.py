import random
import re

# usage
# 10 | python .\fake_ip.py
# python .\fake_ip.py


# grep usage
# grep Private ips_output_grepable.txt | awk '{split($0,a,","); print a[2]}'
# grep Public ips_output_grepable.txt | awk '{split($0,a,","); print a[2]}'

# global oneNineTwo
# oneNineTwo = re.compile('192.168.[0-255].[0-255]')
# global ten
# ten = re.compile('10.[0-255].[0-255].[0-255]')
# global oneSevenTwo 
# oneSevenTwo = re.compile('172.[16-31].[0-255].[0-255]')

def generate_private_ip():
    select = random.randint(0,2)
    source = ''
    if select == 0:
        # 192.168.0.0/16
        source += '192.168' + \
        '.' + str(random.randint(0, 255)) + \
        '.' + str(random.randint(0, 255))
    elif select == 1:
        # 172.16.0.0/16 --> 172.31.255.255/20
        source += '172' + \
        '.' + str(random.randint(16, 31)) + \
        '.' + str(random.randint(0, 255)) + \
        '.' + str(random.randint(0, 255))
    elif select == 2:
        # 10.0.0.0/8
        source += '10' + \
        '.' + str(random.randint(0, 255)) + \
        '.' + str(random.randint(0, 255)) + \
        '.' + str(random.randint(0, 255))

    return source

# TODO: how to make sure these aren't private?
# regex
def generate_ip():
    # source = str(random.randint(0, 255)) + \
    #     '.' + str(random.randint(0, 255)) + \
    #     '.' + str(random.randint(0, 255)) + \
    #     '.' + str(random.randint(0, 255))
    # return source

    source = '.'.join(str(random.randint(0, 255)) for _ in range(0, 4))
    return source[:-1]



f = open('ips_output.txt', 'w')
fg = open('grepable_ips_output.txt', 'w')
counter = input('')
verify_num = re.compile(r'[0-9]+')
search = verify_num.findall(counter)

if (len(search) == 0):
# if type(counter) is not int or counter <= 0:
    print('Error on input.  ')
    exit()

value = int(search[0])

f.write('-----Public IPs-----\n')
for each in range(value):
    ip = generate_ip()
    f.write(ip+'\n')
    fg.write('Public,'+ip+'\n')
    # print(generate_ip())

f.write('-----Private IPs-----\n')
for each in range(value):
    ip = generate_private_ip()
    f.write(ip+'\n')
    fg.write('Private,'+ip+'\n')
    # print(generate_private_ip())

f.close()