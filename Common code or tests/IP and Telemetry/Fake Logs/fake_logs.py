import random
import string
import datetime

# useage:
# 1000 | python .\fake_logs.py

global web_directories
web_directories = [
    'about',
    'admin',
    'contact',
    'blog',
    'news',
    'products',
    'services',
    'portfolio',
    'team',
    'faq',
    'support',
    'login',
    'signup',
    'account',
    'profile',
    'settings',
    'dashboard',
    'downloads',
    'events',
    'gallery',
    'media',
    'jobs',
    'career',
    'clients',
    'partners',
    'resources',
    'help',
    'forum',
    'community',
    'projects',
    'store',
    'shop',
    'cart',
    'checkout',
    'pricing',
    'testimonials',
    'reviews',
    'feedback',
    'terms',
    'privacy',
    'policy',
    'conditions',
    'shipping',
    'returns',
    'refund',
    'faq',
    'blog',
    'articles',
    'guides',
    'tutorials',
    'documentation',
    'manual',
    'support',
    'contact',
    'contact-us',
    'support',
    'feedback',
    'bug-report',
    'report',
    'subscribe',
    'newsletter',
    'subscribe',
    'unsubscribe',
    'events',
    'calendar',
    'bookings',
    'reservation',
    'appointments',
    'tickets',
    'checkout',
    'shop',
    'store',
    'products',
    'services',
    'solutions',
    'features',
    'benefits',
    'testimonials',
    'reviews',
    'gallery',
    'portfolio',
    'case-studies',
    'works',
    'clients',
    'partners',
    'affiliates',
    'deals',
    'offers',
    'discounts',
    'promotions',
    'rewards',
    'loyalty',
    'points',
    'login',
    'signup',
    'register',
    'signin',
    'account',
    'profile',
    'dashboard',
    'settings',
    'preferences',
    'edit-profile',
    'delete-account'
]

global internet_domains
internet_domains = [
    'com',
    'org',
    'net',
    'edu',
    'gov',
    'io',
    'co',
    'uk',
    'de',
    'jp',
    'fr',
    'ca',
    'au',
    'us',
    'ru',
    'in',
    'cn',
    'info',
    'biz',
    'mobi',
    'name',
    'blog',
    'online',
    'store',
    'tech',
    'app',
    'club',
    'xyz',
    'space',
    'website',
    'edu',
    'ac',
    'sch',
    'gov',
    'mil',
    'int',
    'arpa',
    'travel',
    'museum',
    'aero',
    'coop',
    'pro',
    'tel',
    'asia',
    'jobs',
    'cat'
]

global url_prefixes
url_prefixes = [
    'http://',
    'https://',
    'ftp://',
    'ftps://',
    'file://',
    'mailto:',
    'tel:',
    'sms:',
    'data:',
    'irc://',
    'ircs://',
    'news:',
    'nntp://',
    'gopher://',
    'ws://',
    'wss://',
    'magnet:',
    'about:',
    'chrome://',
    'edge://',
    'firefox://',
    'opera://',
    'safari://',
    'view-source:',
]

global web_request_status
web_request_status = [
    100, 101, 200, 201, 202, 203, 204, 205, 206,
    300, 301, 302, 303, 304, 305, 307,
    400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
    410, 411, 412, 413, 414, 415, 416, 417,
    500, 501, 502, 503, 504, 505
]
global web_request_status_with_text
web_request_status_with_text = {
    100: "Continue",
    101: "Switching Protocols",
    200: "OK",
    201: "Created",
    202: "Accepted",
    203: "Non-Authoritative Information",
    204: "No Content",
    205: "Reset Content",
    206: "Partial Content",
    300: "Multiple Choices",
    301: "Moved Permanently",
    302: "Found",
    303: "See Other",
    304: "Not Modified",
    305: "Use Proxy",
    307: "Temporary Redirect",
    400: "Bad Request",
    401: "Unauthorized",
    402: "Payment Required",
    403: "Forbidden",
    404: "Not Found",
    405: "Method Not Allowed",
    406: "Not Acceptable",
    407: "Proxy Authentication Required",
    408: "Request Timeout",
    409: "Conflict",
    410: "Gone",
    411: "Length Required",
    412: "Precondition Failed",
    413: "Payload Too Large",
    414: "URI Too Long",
    415: "Unsupported Media Type",
    416: "Range Not Satisfiable",
    417: "Expectation Failed",
    500: "Internal Server Error",
    501: "Not Implemented",
    502: "Bad Gateway",
    503: "Service Unavailable",
    504: "Gateway Timeout",
    505: "HTTP Version Not Supported"
}

global random_counter

def generate_ip():
    source = '.'.join(str(random.randint(0, 255)) for _ in range(0, 4))
    return source[:-1]


def generate_random_url(length=random.choice([4,8,10])):
    # Define characters for the random string
    chars = string.ascii_letters + string.digits

    global random_counter
    if random_counter > random.randint(0, 1000):
        global url_prefixes
        prefix = ''.join(random.choice(url_prefixes))
    else:
        prefix = ''.join(random.choice(['http://', 'https://']))
    # Generate a random string of specified length
    hostname = ''.join(random.choice(chars) for _ in range(length))
    global internet_domains
    domain = (random.choice(internet_domains))
    # Combine prefix and random string
    url = prefix + hostname + '.' + domain

    return url

def generate_random_request_type():
    request_type = ['GET', 'POST', 'PUT', 'DELETE']
    return random.choice(request_type)

def generate_status_code():
    global web_request_status
    status = [100, 200, 300, 400, 500]
    return str(random.choice(web_request_status))

def generate_port():
    # override, value
    # if override == True:
    #     return value
    port = [80, 443, 4443, 22, 21, 123, 163, 164, 445]
    return str(random.choice(port))

def generate_date_time():
    date_init = ''
    time_init = ''
    
    month, day, year = str(random.randint(1,13)), str(random.randint(1, 31)), str(random.randint(2020, 2025))
    if len(month) < 2:
        month = '0' + month
    if len(day) < 2:
        day = '0' + day
    date = month + '/' + day + '/' + year

    hour, mins, seconds, mili = str(random.randint(0, 24)), str(random.randint(0, 60)), str(random.randint(0, 60)), str(random.randint(0,1000))
    if len(hour) < 2:
        hour = '0' + hour
    if len(mins) < 2:
        mins = '0' + mins
    if len(seconds) < 2:
        seconds = '0' + seconds
    
    time = hour + ':' + mins + ':' + seconds + '.' + mili

    return date + '\t' + time

def generate_path(length):
    global web_directories
    full_path = '/'.join(random.choice(web_directories) for _ in range(length))
    return full_path


def set_random_counter():
    global random_counter
    random_counter = random.randint(0, 100)

# value = input('Enter the amount of fake telemetry entries to create: ')
f = open('fake_logs.txt', 'w')

value = 100
# set random value
set_random_counter()

f.write('Date\tTime\tOrigin IP\tPort\tURL\tPath\tRequest Type\tStatus\n')
for each in range(0, int(value)):
    f.write(generate_date_time() + '\t'
            + generate_ip() + '\t' 
            + generate_port() + '\t'
            + generate_random_url() + '\t'
            + generate_path(length=random.choice([1,2,3,4,5,6])) + '\t'
            + generate_random_request_type() + '\t'
            + generate_status_code() + '\n')

f.close()
