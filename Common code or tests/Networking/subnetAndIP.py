import socket, requests, uuid, random, json, os

hostname = socket.gethostname()
print(f"Hostname: {hostname}")

# ip_address = socket.gethostbyname(hostname)
# print(f"Subnet IP Address: {ip_address}")

# determine public IP
response = requests.get('http://checkip.dyndns.org/')
# change bytes to a string
response = response.content.decode("utf-8")
# pull out the IP address from the website
publicIP = response[76:89]
print('Current public IP Address:', publicIP)

# get location from current public IP address
# https://ip-api.com/docs/api:json
response = requests.get('http://ip-api.com/json/'+publicIP)
data = json.loads(response.content)
print('\n\n')
for idx in data:
    print(str(idx)+': '+str(data[idx]))
print('\n\n')

# https://www.geeksforgeeks.org/extracting-mac-address-using-python/
print ("MAC: ", end="")
print (':'.join(['{:02x}'.format((uuid.getnode() >> ele) & 0xff)
for ele in range(0,8*6,8)][::-1]))

# spoof public ip
spoof_ip = ''
for idx in range(0,4):
    spoof_ip+=(str(random.randint(0,255))+'.')

spoof_ip= spoof_ip[0:len(spoof_ip)-1]
print('Spoofed IP',spoof_ip)
# search for spoofed ip on ip-api website
response = requests.get('http://ip-api.com/json/'+spoof_ip)
data = json.loads(response.content)
print('\n')
for idx in data:
    print(str(idx)+': '+str(data[idx]))
print('\n\n')

# do arp -a on the current subnetwork  
devices = []
for device in os.popen('arp -a'):
    devices.append(device)
    
# current ip address for adapter being used will always be devices[1]
# how to find the current subnet range, look at the subnet address
currentSubnetRange = ' '+devices[1][10:21]
for i in range(0, len(devices)):
    if devices[i][0:12] == currentSubnetRange:
        print(devices[i])