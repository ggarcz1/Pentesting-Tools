import requests
import time
import socket


def test_network_connectivity(host, port):
    try:
        # Create a socket object
        sock = socket.create_connection((host, port), timeout=5)
        print(f"Successfully connected to {host}:{port}")
        sock.close()
        return True
    except socket.error as e:
        print(f"Unable to connect to {host}:{port}. Error: {e}")
        return False
    
#add items to brute force
# lst = []
# f = None
# # if a file is being defined
# if len(lst) == 0 and len(sys.argv) == 1:
#     try: 
#         fileName = input('Enter file name')
#         f = open(fileName, 'r')    
#     except FileNotFoundError:
#         print("File not found.")
# elif len(sys.argv) == 2:
#     try:
#         f = open(sys.argv[1], 'r')
#     except FileNotFoundError:
#         print("File not found.")

url = '127.0.0.1:5000'
# port = '5000'
header = 'Path\tStatus Code\n-----------------------'
print(f'Beginning Brute forcer for http://{url}')

## if the url does not have a port on it
# port = input('Care to add a port? (\'n\' for no)')
# if port is not 'n':
#     url+= f':{port}'

if not test_network_connectivity('127.0.0.1','5000'):
    print('\n\nTerminating Program...\n\n')
    exit (1)

f = open('list.txt')
f2 = open('output.txt', 'a+')
counter = 0

# may not need this since the txt file
# is for ctrl+f and/or grep items
# f2.write(header+'\n')
print(header)

for path in f: 
    # new line was present, giving incorrect results
    path = path[:-1]
    send_url = f'http://{url}/'+path
    response = requests.get(send_url)
    output = ''
    if response.status_code == 200:
        # full url
        # output = f'{send_url}\t200'
        output = f'{path}\t200'
        print(f'{output}')
    else:
        output = f'{send_url}\t{response.status_code}' 
    f2.write(output+'\n')
    
    # time.sleep(1)

print('Done!')